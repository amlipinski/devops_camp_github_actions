name: Python uppercase

on:
  push: 
    paths:
      - "py-upper/**"
      - ".github/workflows/python-uppercase.yaml"
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    environment:
      name: 'dev'
    steps:
      - name: Show name of GH environment
        run: echo "${{ vars.environment.name }}"
      - name: Show environment
        run: env
      - name: Display variables
        run: |
          echo "${{ runner.os }}"
      - name: Check python version
        run: python3 -V
      - name: Download application code
        uses: actions/checkout@v4
      - name: Configure cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{hashFiles('**/requirements.txt')}}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: List directory
        run: ls -lR
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Check python version
        run: python3 -V
      # - name: Install requirements
      #   run: pip install -r py-upper/requirements.txt
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: "py-upper/requirements.txt"
      - name: Run tests
        run: pytest
        working-directory: py-upper
        
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ['3.12', '3.13']
    environment:
      name: 'prd'
    needs: tests
    steps:
      - name: Show name of GH environment
        run: echo "${{ vars.environment.name }}"
      - name: Log python version
        run: echo "This run is for python ${{ matrix.python_version }}"
      - name: hostname
        run: hostname
      - name: Download application code
        uses: actions/checkout@v4
      - name: Configure cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{hashFiles('**/requirements.txt')}}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: List directory 1
        run: ls -lR
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Check python version
        run: python3 -V
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: "py-upper/requirements.txt"
      
      - name: Compile
        run: pyinstaller --onefile uppercase.py
        working-directory: py-upper 
      
      - name: List directory 2
        run: ls -lR
        if: failure()
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "uppercase-software-${{ matrix.python_version }}"
          path: py-upper/dist/uppercase
          overwrite: true

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      - name: List artifacts
        run: ls -lR artifacts
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          body: "Binaries ready for download and run (on Ubuntu)"
          tag_name: ${{ github.ref_name }}